* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

@keyframes slideInLeft {
    from {
        transform: translateX(-300px);
    }

    to {
        transform: translateX(0);
    }
}

.cus-animate {
    animation-name: slideInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-in;
    animation-delay: 1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: none;

}

@keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .fade-in {
    animation-name: fadeIn;
    animation-duration: 6s;
    animation-timing-function: ease-in;
    animation-fill-mode: forwards;
  }



/* Home CSS*/

.img-wd {
    width: 300px;
    height: 400px;
    margin-top: 10px;
}

.img-sb {
    width: 300px;
    margin-left: 50px;
}

.cus-wd {
    width: 100%
}

.cus-wd p {
    max-width: 400px; /* Set a maximum width for the paragraph */
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
    flex: 1; /* Allow the paragraph to grow and fill available space */
    margin-left: 10px; /* Add some spacing between image and text */
    font-family: "Roboto", sans-serif;
    font-weight: 400;
    font-style: normal;
  }

  .rv {
    
    font-family: "Anton SC", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: xx-large;
      
  }

  /* fan art */
  .f-a {
    font-family: "Roboto", sans-serif;
    font-weight: 700;
    font-style: normal;
  }

  /* Review cards*/

  .wrapper {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 60vh;
  }

  .container {
    height: 400px;
    display: flex;
    flex-wrap: nowrap;
    justify-content: start;
  }

  .card {
    width: 200px;
    border-radius: .75rem;
    background-size: cover;
    cursor: pointer;
    overflow: hidden;
    border-radius: 2rem;
    margin: 0 10px;
    display: flex;
    align-items: flex-end;
    transition: .6s cubic-bezier(.28,-0.03,0,.99);
    box-shadow: 0px 10px 30px -5px rgba(0,0,0,0.8);
  }

  .card > .row {
    color: white;
    display: flex;
    flex-wrap: nowrap;
  }

  .card > .row > .icon {
    background: #223;
    color: white;
    border-radius: 50%;
    width: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 15px;
  }
  /* opacity: 0 hides the description */
  .card > .row > .description {
    display: flex;
    justify-content: center;
    flex-direction: column;
    overflow: hidden;
    height: 80px;
    width: 520px;
    opacity: 0;
    transform: translateY(30px);
    transition-delay: .3s;
    transition: all .3s ease;
  }

  .description p {
    color: white;
    padding-top: 5px;
    font-family: "Roboto", sans-serif;
    font-weight: 700;
    font-style: normal;
  }

  .description h4 {
    text-transform: uppercase;
    font-family: "Anton SC", sans-serif;
    font-weight: 400;
    font-style: normal;
  }

  input {
    display: none;
  }

  input:checked + label {
    width: 600px;
  }

  /* description visible when click */
  input:checked + label .description {
    opacity: 1 !important;
    transform: translateY(0) !important
  }

  .card[for='cd1'] {
    background-image: url('../images/Songbird.jpeg');
  }

  .card[for='cd2'] {
    background-image: url('../images/DD2.jpeg');
  }

  .card[for='cd3'] {
    background-image: url('../images/SF7.jpeg');
  }

  .card[for='cd4'] {
    background-image: url('../images/FF7.jpeg');
  }


  /*
  The CSS rule input:checked + label .description means 
  that when an input element is checked, the .description 
  element that is a descendant of the next sibling label element 
  will have its opacity set to 1 and its transform property set 
  to translateY(0). 
  */